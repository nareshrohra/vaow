{"version":3,"sources":["core/formatters/translation-result-formatter.js"],"names":[],"mappings":";;;;;;;;;;;MAKa,0BAA0B;aAA1B,0BAA0B;4BAA1B,0BAA0B;;;iBAA1B,0BAA0B;;aACxB,gBAAC,iBAAiB,EAAE;AAC/B,YAAI,UAAU,GAAG,iBAAiB,CAAC,aAAa,EAAE;YAChD,IAAI,GAAG,iBAAiB,CAAC,OAAO,EAAE;YAClC,UAAU,GAAG,iBAAiB,CAAC,aAAa,EAAE,CAAC;;AAEjD,eAAO,gBAVT,cAAc,CAUU,MAAM,CAAC,UAAU,CAAC,IACrC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA,AAAC,IAClE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,CAAA,AAAC,CAAC;OAC5B;;;WATU,0BAA0B","file":"core/formatters/translation-result-formatter.js","sourcesContent":["import {\n  DigitFormatter\n}\nfrom './digit-formatter';\n\nexport class TranslationResultFormatter {\n  static format(translationResult) {\n    let digitValue = translationResult.getDigitValue(),\n      unit = translationResult.getUnit(),\n      magnitudes = translationResult.getMagnitudes();\n\n    return DigitFormatter.format(digitValue) +\n      (magnitudes.length > 0 ? ' ' + magnitudes.reverse().join(' ') : '') +\n      (unit ? ' ' + unit : '');\n  }\n}\n"],"sourceRoot":"/source/"}