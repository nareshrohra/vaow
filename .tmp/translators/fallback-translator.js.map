{"version":3,"sources":["translators/fallback-translator.js"],"names":[],"mappings":";;;;;;;;;;;MAKa,kBAAkB;aAAlB,kBAAkB;4BAAlB,kBAAkB;;;iBAAlB,kBAAkB;;aACb,mBAAC,KAAK,EAAE;AACtB,YAAI,eAAe,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;AACvC,YAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;YAC9C,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;AAC/C,eAAO,8BATT,cAAc,CASU,MAAM,CAAC,QAAQ,CAAC,IAAI,QAAQ,GAAG,CAAC,GAAG,QAAQ,GAAG,QAAQ,GAAG,EAAE,CAAA,AAAC,CAAC;OACpF;;;aAEiB,qBAAC,eAAe,EAAE;AAClC,eAAO,eAAe,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;OACpE;;;aAEiB,qBAAC,eAAe,EAAE;AAClC,YAAI,eAAe,GAAG,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACnD,eAAO,eAAe,CAAC;OACxB;;;WAfU,kBAAkB","file":"translators/fallback-translator.js","sourcesContent":["import {\n  DigitFormatter\n}\nfrom '../core/formatters/digit-formatter';\n\nexport class FallbackTranslator {\n  static translate(value) {\n    let translatedValue = value.toString();\n    let mantissa = this.getMantissa(translatedValue),\n      exponent = this.getExponent(translatedValue);\n    return DigitFormatter.format(mantissa) + (exponent > 1 ? ' X 10^' + exponent : '');\n  }\n\n  static getExponent(translatedValue) {\n    return translatedValue.substring(translatedValue.indexOf(\"+\") + 1);\n  }\n\n  static getMantissa(translatedValue) {\n    let decimalPosition = translatedValue.indexOf('.');\n    return translatedValue;\n  }\n}\n"],"sourceRoot":"/source/"}