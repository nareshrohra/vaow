{"version":3,"sources":["translators/number-translator.js"],"names":[],"mappings":";;;;;;;;;;;MAUa,gBAAgB;iBAAhB,gBAAgB;;aAGT,uBAAG;AACnB,YAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;AAC9B,0BAAgB,CAAC,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;SACpD;AACD,eAAO,gBAAgB,CAAC,QAAQ,CAAC;OAClC;;;AAEU,aAVA,gBAAgB,GAUb;4BAVH,gBAAgB;;AAWzB,UAAI,CAAC,gBAAgB,GAAG,uCAf1B,wBAAwB,EAegC,CAAC;AACvD,UAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;iBAbU,gBAAgB;;aAeb,0BAAG;AACf,0BAzBF,gBAAgB,CAyBG,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;OACvD;;;aAEQ,mBAAC,MAAM,EAAE;AAChB,YAAI,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AAC5B,iBAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;SAC5D,MAAM;AACL,gBAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACtC;OACF;;;WAzBU,gBAAgB","file":"translators/number-translator.js","sourcesContent":["import {\n  TranslatorHelper\n}\nfrom './translator-helper';\n\nimport {\n  CircularTranslationChain\n}\nfrom '../core/chain/circular-translation-chain';\n\nexport class NumberTranslator {\n  static instance;\n\n  static getInstance() {\n    if (!NumberTranslator.instance) {\n      NumberTranslator.instance = new NumberTranslator();\n    }\n    return NumberTranslator.instance;\n  }\n\n  constructor() {\n    this.translationChain = new CircularTranslationChain();\n    this.constructChain();\n  }\n\n  constructChain() {\n    TranslatorHelper.addMagnitudes(this.translationChain);\n  }\n\n  translate(number) {\n    if (number && !isNaN(number)) {\n      return this.translationChain.translate(Math.round(number));\n    } else {\n      throw new Error(\"number is invalid\");\n    }\n  }\n}\n"],"sourceRoot":"/source/"}